CREATE SEQUENCE REPLICACAO.SEQ_TOPICO
       MINVALUE 1
       MAXVALUE 999999999
          START WITH 1
      INCREMENT BY 1
        NOCACHE;

GRANT SELECT ON REPLICACAO.SEQ_TOPICO TO SIS_REPLICACAO;

CREATE TABLE REPLICACAO.TOPICO
(
    ID        NUMBER(9) DEFAULT REPLICACAO.SEQ_TOPICO.NEXTVAL NOT NULL,
    NOME      VARCHAR2(128) NOT NULL,
    REPLICAS  NUMBER(2) NULL,
    PARTICOES NUMBER(2) NULL,
    SITUACAO  NUMBER(1) DEFAULT 1 NOT NULL,
    OPERACAO  NUMBER(1) NOT NULL
)
TABLESPACE TBS_REPLICACAO
   PCTFREE 10
  INITRANS 1
  MAXTRANS 255
   STORAGE
   (
       INITIAL 64K
       NEXT 1M
       MINEXTENTS 1
       MAXEXTENTS UNLIMITED
   );

COMMENT ON TABLE REPLICACAO.TOPICO            IS 'Define um tópico.';

COMMENT ON COLUMN REPLICACAO.TOPICO.ID        IS 'Identificação do tópico.';
COMMENT ON COLUMN REPLICACAO.TOPICO.NOME      IS 'Nome do tópico, recurso exclusivo do Kafka.';
COMMENT ON COLUMN REPLICACAO.TOPICO.REPLICAS  IS 'Quantidade de réplicas, recurso exclusivo do Kafka.';
COMMENT ON COLUMN REPLICACAO.TOPICO.PARTICOES IS 'Quantidade de partições, recurso exclusivo do Kafka.';
COMMENT ON COLUMN REPLICACAO.TOPICO.SITUACAO  IS 'Define se o tópico está (0) desativado ou (1) ativado.';
COMMENT ON COLUMN REPLICACAO.TOPICO.OPERACAO  IS 'Define se o tópico será usado para uma operação de (1) criação ou (2) atualização ou (3) deleção.';

ALTER TABLE REPLICACAO.TOPICO
        ADD CONSTRAINT PK_TOPICO
    PRIMARY KEY (ID)
      USING INDEX TABLESPACE TBS_REPLICACAO;

ALTER TABLE REPLICACAO.TOPICO
        ADD CONSTRAINT CK_TOPICO_SITUACAO
      CHECK (SITUACAO IN (0, 1));

ALTER TABLE REPLICACAO.TOPICO
        ADD CONSTRAINT CK_TOPICO_OPERACAO
      CHECK (OPERACAO IN (1, 2, 3));

GRANT SELECT, INSERT, UPDATE, DELETE ON REPLICACAO.TOPICO TO SIS_REPLICACAO;
